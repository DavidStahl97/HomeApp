@page "/tours"

@attribute [Authorize]

@inject IWebAPIClient Client
@inject NavigationManager Navigation

<MudToolBar Class="mb-15">
    <MudText Typo="Typo.h6">Tours</MudText>
    <MudToolBarSpacer />
    <MudTextField @bind-Value="searchString"
                  Placeholder="Search"
                  Adornment="Adornment.Start"
                  AdornmentIcon="@Icons.Material.Filled.Search"
                  IconSize="Size.Small"
                  Class="mt-n5" />
    <MudToolBarSpacer />
    <Pagination />
</MudToolBar>

@foreach (var tour in tours)
{
    <MudPaper Elevation="3" Style="margin: 10px">
        <MudButton Variant="Variant.Text" Style="margin: 10px" OnClick="@(() => OnTourClicked(tour.TourId))">
            @tour.Name
        </MudButton>
    </MudPaper>
}

@code {
    private string searchString = "";

    private IEnumerable<WebApi.TourInfoDto> tours = new List<WebApi.TourInfoDto>();

    protected override async Task OnInitializedAsync()
    {
        tours = await Client.SendAsync(x => x.GetAllTourInfosAsync());
    }

    private void OnTourClicked(string tourId)
    {
        Navigation.NavigateTo($"/tours/{tourId}");
    }
}
